# This file is autogenerated by `applaudgen` from `app_store_connect_api.json`.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!

from deprecated import deprecated
from typing import Union, Optional, Literal
from .enums import *
from .models import *
from .requests import *
from pydantic import Field

class ApplaudResponse(ApplaudModel):
    pass

class AgeRatingDeclarationResponse(ApplaudResponse):
    data: AgeRatingDeclaration
    links: DocumentLinks

class AppCategoriesResponse(ApplaudResponse):
    data: list[AppCategory]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppCategory, AppCategory]]]
    meta: Optional[PagingInformation]

class AppCategoryResponse(ApplaudResponse):
    data: AppCategory
    links: DocumentLinks
    included: Optional[list[Union[AppCategory, AppCategory]]]

class AppClipAdvancedExperienceImageResponse(ApplaudResponse):
    data: AppClipAdvancedExperienceImage
    links: DocumentLinks

class AppClipAdvancedExperiencesResponse(ApplaudResponse):
    data: list[AppClipAdvancedExperience]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClip, AppClipAdvancedExperienceImage, AppClipAdvancedExperienceLocalization]]]
    meta: Optional[PagingInformation]

class AppClipAdvancedExperienceResponse(ApplaudResponse):
    data: AppClipAdvancedExperience
    links: DocumentLinks
    included: Optional[list[Union[AppClip, AppClipAdvancedExperienceImage, AppClipAdvancedExperienceLocalization]]]

class AppClipAppStoreReviewDetailResponse(ApplaudResponse):
    data: AppClipAppStoreReviewDetail
    links: DocumentLinks
    included: Optional[list[AppClipDefaultExperience]]

class AppClipDefaultExperienceLocalizationsResponse(ApplaudResponse):
    data: list[AppClipDefaultExperienceLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClipDefaultExperience, AppClipHeaderImage]]]
    meta: Optional[PagingInformation]

class AppClipDefaultExperienceLocalizationResponse(ApplaudResponse):
    data: AppClipDefaultExperienceLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppClipDefaultExperience, AppClipHeaderImage]]]

class AppClipDefaultExperiencesResponse(ApplaudResponse):
    data: list[AppClipDefaultExperience]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppClip, AppStoreVersion, AppClipDefaultExperienceLocalization, AppClipAppStoreReviewDetail]]]
    meta: Optional[PagingInformation]

class AppClipDefaultExperienceResponse(ApplaudResponse):
    data: AppClipDefaultExperience
    links: DocumentLinks
    included: Optional[list[Union[AppClip, AppStoreVersion, AppClipDefaultExperienceLocalization, AppClipAppStoreReviewDetail]]]

class AppClipDomainStatusResponse(ApplaudResponse):
    data: AppClipDomainStatus
    links: DocumentLinks

class AppClipHeaderImageResponse(ApplaudResponse):
    data: AppClipHeaderImage
    links: DocumentLinks
    included: Optional[list[AppClipDefaultExperienceLocalization]]

class AppClipsResponse(ApplaudResponse):
    data: list[AppClip]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, AppClipDefaultExperience]]]
    meta: Optional[PagingInformation]

class AppClipResponse(ApplaudResponse):
    data: AppClip
    links: DocumentLinks
    included: Optional[list[Union[App, AppClipDefaultExperience]]]

class AppEncryptionDeclarationsResponse(ApplaudResponse):
    data: list[AppEncryptionDeclaration]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class AppEncryptionDeclarationResponse(ApplaudResponse):
    data: AppEncryptionDeclaration
    links: DocumentLinks
    included: Optional[list[App]]

class AppInfoLocalizationsResponse(ApplaudResponse):
    data: list[AppInfoLocalization]
    links: PagedDocumentLinks
    included: Optional[list[AppInfo]]
    meta: Optional[PagingInformation]

class AppInfoLocalizationResponse(ApplaudResponse):
    data: AppInfoLocalization
    links: DocumentLinks
    included: Optional[list[AppInfo]]

class AppInfosResponse(ApplaudResponse):
    data: list[AppInfo]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, AgeRatingDeclaration, AppInfoLocalization, AppCategory, AppCategory, AppCategory, AppCategory, AppCategory, AppCategory]]]
    meta: Optional[PagingInformation]

class AppInfoResponse(ApplaudResponse):
    data: AppInfo
    links: DocumentLinks
    included: Optional[list[Union[App, AgeRatingDeclaration, AppInfoLocalization, AppCategory, AppCategory, AppCategory, AppCategory, AppCategory, AppCategory]]]

class AppPreOrderResponse(ApplaudResponse):
    data: AppPreOrder
    links: DocumentLinks
    included: Optional[list[App]]

class AppPreviewSetsResponse(ApplaudResponse):
    data: list[AppPreviewSet]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersionLocalization, AppPreview]]]
    meta: Optional[PagingInformation]

class AppPreviewSetResponse(ApplaudResponse):
    data: AppPreviewSet
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersionLocalization, AppPreview]]]

class AppPreviewsResponse(ApplaudResponse):
    data: list[AppPreview]
    links: PagedDocumentLinks
    included: Optional[list[AppPreviewSet]]
    meta: Optional[PagingInformation]

class AppPreviewResponse(ApplaudResponse):
    data: AppPreview
    links: DocumentLinks
    included: Optional[list[AppPreviewSet]]

class AppPricePointsResponse(ApplaudResponse):
    data: list[AppPricePoint]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppPriceTier, Territory]]]
    meta: Optional[PagingInformation]

class AppPricePointResponse(ApplaudResponse):
    data: AppPricePoint
    links: DocumentLinks
    included: Optional[list[Union[AppPriceTier, Territory]]]

class AppPriceTiersResponse(ApplaudResponse):
    data: list[AppPriceTier]
    links: PagedDocumentLinks
    included: Optional[list[AppPricePoint]]
    meta: Optional[PagingInformation]

class AppPriceTierResponse(ApplaudResponse):
    data: AppPriceTier
    links: DocumentLinks
    included: Optional[list[AppPricePoint]]

class AppPricesResponse(ApplaudResponse):
    data: list[AppPrice]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, AppPriceTier]]]
    meta: Optional[PagingInformation]

class AppPriceResponse(ApplaudResponse):
    data: AppPrice
    links: DocumentLinks
    included: Optional[list[Union[App, AppPriceTier]]]

class AppScreenshotSetsResponse(ApplaudResponse):
    data: list[AppScreenshotSet]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersionLocalization, AppScreenshot]]]
    meta: Optional[PagingInformation]

class AppScreenshotSetResponse(ApplaudResponse):
    data: AppScreenshotSet
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersionLocalization, AppScreenshot]]]

class AppScreenshotsResponse(ApplaudResponse):
    data: list[AppScreenshot]
    links: PagedDocumentLinks
    included: Optional[list[AppScreenshotSet]]
    meta: Optional[PagingInformation]

class AppScreenshotResponse(ApplaudResponse):
    data: AppScreenshot
    links: DocumentLinks
    included: Optional[list[AppScreenshotSet]]

class AppStoreReviewAttachmentsResponse(ApplaudResponse):
    data: list[AppStoreReviewAttachment]
    links: PagedDocumentLinks
    included: Optional[list[AppStoreReviewDetail]]
    meta: Optional[PagingInformation]

class AppStoreReviewAttachmentResponse(ApplaudResponse):
    data: AppStoreReviewAttachment
    links: DocumentLinks
    included: Optional[list[AppStoreReviewDetail]]

class AppStoreReviewDetailResponse(ApplaudResponse):
    data: AppStoreReviewDetail
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersion, AppStoreReviewAttachment]]]

class AppStoreVersionLocalizationsResponse(ApplaudResponse):
    data: list[AppStoreVersionLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Union[AppStoreVersion, AppScreenshotSet, AppPreviewSet]]]
    meta: Optional[PagingInformation]

class AppStoreVersionLocalizationResponse(ApplaudResponse):
    data: AppStoreVersionLocalization
    links: DocumentLinks
    included: Optional[list[Union[AppStoreVersion, AppScreenshotSet, AppPreviewSet]]]

class AppStoreVersionPhasedReleaseResponse(ApplaudResponse):
    data: AppStoreVersionPhasedRelease
    links: DocumentLinks

class AppStoreVersionReleaseRequestResponse(ApplaudResponse):
    data: AppStoreVersionReleaseRequest
    links: DocumentLinks

class AppStoreVersionSubmissionResponse(ApplaudResponse):
    data: AppStoreVersionSubmission
    links: DocumentLinks
    included: Optional[list[AppStoreVersion]]

class AppStoreVersionsResponse(ApplaudResponse):
    data: list[AppStoreVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, AgeRatingDeclaration, AppStoreVersionLocalization, Build, AppStoreVersionPhasedRelease, RoutingAppCoverage, AppStoreReviewDetail, AppStoreVersionSubmission, IdfaDeclaration, AppClipDefaultExperience]]]
    meta: Optional[PagingInformation]

class AppStoreVersionResponse(ApplaudResponse):
    data: AppStoreVersion
    links: DocumentLinks
    included: Optional[list[Union[App, AgeRatingDeclaration, AppStoreVersionLocalization, Build, AppStoreVersionPhasedRelease, RoutingAppCoverage, AppStoreReviewDetail, AppStoreVersionSubmission, IdfaDeclaration, AppClipDefaultExperience]]]

class AppsResponse(ApplaudResponse):
    data: list[App]
    links: PagedDocumentLinks
    included: Optional[list[Union[CiProduct, BetaGroup, AppStoreVersion, PrereleaseVersion, BetaAppLocalization, Build, BetaLicenseAgreement, BetaAppReviewDetail, AppInfo, AppClip, EndUserLicenseAgreement, AppPreOrder, AppPrice, Territory, InAppPurchase, GameCenterEnabledVersion]]]
    meta: Optional[PagingInformation]

class AppResponse(ApplaudResponse):
    data: App
    links: DocumentLinks
    included: Optional[list[Union[CiProduct, BetaGroup, AppStoreVersion, PrereleaseVersion, BetaAppLocalization, Build, BetaLicenseAgreement, BetaAppReviewDetail, AppInfo, AppClip, EndUserLicenseAgreement, AppPreOrder, AppPrice, Territory, InAppPurchase, GameCenterEnabledVersion]]]

class BetaAppClipInvocationLocalizationResponse(ApplaudResponse):
    data: BetaAppClipInvocationLocalization
    links: DocumentLinks

class BetaAppClipInvocationsResponse(ApplaudResponse):
    data: list[BetaAppClipInvocation]
    links: PagedDocumentLinks
    included: Optional[list[BetaAppClipInvocationLocalization]]
    meta: Optional[PagingInformation]

class BetaAppClipInvocationResponse(ApplaudResponse):
    data: BetaAppClipInvocation
    links: DocumentLinks
    included: Optional[list[BetaAppClipInvocationLocalization]]

class BetaAppLocalizationsResponse(ApplaudResponse):
    data: list[BetaAppLocalization]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class BetaAppLocalizationResponse(ApplaudResponse):
    data: BetaAppLocalization
    links: DocumentLinks
    included: Optional[list[App]]

class BetaAppReviewDetailsResponse(ApplaudResponse):
    data: list[BetaAppReviewDetail]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class BetaAppReviewDetailResponse(ApplaudResponse):
    data: BetaAppReviewDetail
    links: DocumentLinks
    included: Optional[list[App]]

class BetaAppReviewSubmissionsResponse(ApplaudResponse):
    data: list[BetaAppReviewSubmission]
    links: PagedDocumentLinks
    included: Optional[list[Build]]
    meta: Optional[PagingInformation]

class BetaAppReviewSubmissionResponse(ApplaudResponse):
    data: BetaAppReviewSubmission
    links: DocumentLinks
    included: Optional[list[Build]]

class BetaBuildLocalizationsResponse(ApplaudResponse):
    data: list[BetaBuildLocalization]
    links: PagedDocumentLinks
    included: Optional[list[Build]]
    meta: Optional[PagingInformation]

class BetaBuildLocalizationResponse(ApplaudResponse):
    data: BetaBuildLocalization
    links: DocumentLinks
    included: Optional[list[Build]]

class BetaGroupsResponse(ApplaudResponse):
    data: list[BetaGroup]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, Build, BetaTester]]]
    meta: Optional[PagingInformation]

class BetaGroupResponse(ApplaudResponse):
    data: BetaGroup
    links: DocumentLinks
    included: Optional[list[Union[App, Build, BetaTester]]]

class BetaLicenseAgreementsResponse(ApplaudResponse):
    data: list[BetaLicenseAgreement]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class BetaLicenseAgreementResponse(ApplaudResponse):
    data: BetaLicenseAgreement
    links: DocumentLinks
    included: Optional[list[App]]

class BetaTesterInvitationResponse(ApplaudResponse):
    data: BetaTesterInvitation
    links: DocumentLinks

class BetaTestersResponse(ApplaudResponse):
    data: list[BetaTester]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BetaGroup, Build]]]
    meta: Optional[PagingInformation]

class BetaTesterResponse(ApplaudResponse):
    data: BetaTester
    links: DocumentLinks
    included: Optional[list[Union[App, BetaGroup, Build]]]

class BuildBetaDetailsResponse(ApplaudResponse):
    data: list[BuildBetaDetail]
    links: PagedDocumentLinks
    included: Optional[list[Build]]
    meta: Optional[PagingInformation]

class BuildBetaDetailResponse(ApplaudResponse):
    data: BuildBetaDetail
    links: DocumentLinks
    included: Optional[list[Build]]

class BuildBetaNotificationResponse(ApplaudResponse):
    data: BuildBetaNotification
    links: DocumentLinks

class BuildBundleFileSizesResponse(ApplaudResponse):
    data: list[BuildBundleFileSize]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BuildIconsResponse(ApplaudResponse):
    data: list[BuildIcon]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BuildsResponse(ApplaudResponse):
    data: list[Build]
    links: PagedDocumentLinks
    included: Optional[list[Union[PrereleaseVersion, BetaTester, BetaBuildLocalization, AppEncryptionDeclaration, BetaAppReviewSubmission, App, BuildBetaDetail, AppStoreVersion, BuildIcon, BuildBundle]]]
    meta: Optional[PagingInformation]

class BuildResponse(ApplaudResponse):
    data: Build
    links: DocumentLinks
    included: Optional[list[Union[PrereleaseVersion, BetaTester, BetaBuildLocalization, AppEncryptionDeclaration, BetaAppReviewSubmission, App, BuildBetaDetail, AppStoreVersion, BuildIcon, BuildBundle]]]

class BundleIdCapabilitiesResponse(ApplaudResponse):
    data: list[BundleIdCapability]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BundleIdCapabilityResponse(ApplaudResponse):
    data: BundleIdCapability
    links: DocumentLinks

class BundleIdsResponse(ApplaudResponse):
    data: list[BundleId]
    links: PagedDocumentLinks
    included: Optional[list[Union[Profile, BundleIdCapability, App]]]
    meta: Optional[PagingInformation]

class BundleIdResponse(ApplaudResponse):
    data: BundleId
    links: DocumentLinks
    included: Optional[list[Union[Profile, BundleIdCapability, App]]]

class CertificatesResponse(ApplaudResponse):
    data: list[Certificate]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class CertificateResponse(ApplaudResponse):
    data: Certificate
    links: DocumentLinks

class CiArtifactsResponse(ApplaudResponse):
    data: list[CiArtifact]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class CiArtifactResponse(ApplaudResponse):
    data: CiArtifact
    links: DocumentLinks

class CiBuildActionsResponse(ApplaudResponse):
    data: list[CiBuildAction]
    links: PagedDocumentLinks
    included: Optional[list[CiBuildRun]]
    meta: Optional[PagingInformation]

class CiBuildActionResponse(ApplaudResponse):
    data: CiBuildAction
    links: DocumentLinks
    included: Optional[list[CiBuildRun]]

class CiBuildRunsResponse(ApplaudResponse):
    data: list[CiBuildRun]
    links: PagedDocumentLinks
    included: Optional[list[Union[Build, CiWorkflow, CiProduct, ScmGitReference, ScmGitReference, ScmPullRequest]]]
    meta: Optional[PagingInformation]

class CiBuildRunResponse(ApplaudResponse):
    data: CiBuildRun
    links: DocumentLinks
    included: Optional[list[Union[Build, CiWorkflow, CiProduct, ScmGitReference, ScmGitReference, ScmPullRequest]]]

class CiIssuesResponse(ApplaudResponse):
    data: list[CiIssue]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class CiIssueResponse(ApplaudResponse):
    data: CiIssue
    links: DocumentLinks

class CiMacOsVersionsResponse(ApplaudResponse):
    data: list[CiMacOsVersion]
    links: PagedDocumentLinks
    included: Optional[list[CiXcodeVersion]]
    meta: Optional[PagingInformation]

class CiMacOsVersionResponse(ApplaudResponse):
    data: CiMacOsVersion
    links: DocumentLinks
    included: Optional[list[CiXcodeVersion]]

class CiProductsResponse(ApplaudResponse):
    data: list[CiProduct]
    links: PagedDocumentLinks
    included: Optional[list[Union[App, BundleId, ScmRepository]]]
    meta: Optional[PagingInformation]

class CiProductResponse(ApplaudResponse):
    data: CiProduct
    links: DocumentLinks
    included: Optional[list[Union[App, BundleId, ScmRepository]]]

class CiTestResultsResponse(ApplaudResponse):
    data: list[CiTestResult]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class CiTestResultResponse(ApplaudResponse):
    data: CiTestResult
    links: DocumentLinks

class CiWorkflowsResponse(ApplaudResponse):
    data: list[CiWorkflow]
    links: PagedDocumentLinks
    included: Optional[list[Union[CiProduct, ScmRepository, CiXcodeVersion, CiMacOsVersion]]]
    meta: Optional[PagingInformation]

class CiWorkflowResponse(ApplaudResponse):
    data: CiWorkflow
    links: DocumentLinks
    included: Optional[list[Union[CiProduct, ScmRepository, CiXcodeVersion, CiMacOsVersion]]]

class CiXcodeVersionsResponse(ApplaudResponse):
    data: list[CiXcodeVersion]
    links: PagedDocumentLinks
    included: Optional[list[CiMacOsVersion]]
    meta: Optional[PagingInformation]

class CiXcodeVersionResponse(ApplaudResponse):
    data: CiXcodeVersion
    links: DocumentLinks
    included: Optional[list[CiMacOsVersion]]

class DevicesResponse(ApplaudResponse):
    data: list[Device]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class DeviceResponse(ApplaudResponse):
    data: Device
    links: DocumentLinks

class DiagnosticLogsResponse(ApplaudResponse):
    data: list[DiagnosticLog]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class DiagnosticSignaturesResponse(ApplaudResponse):
    data: list[DiagnosticSignature]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class EndUserLicenseAgreementResponse(ApplaudResponse):
    data: EndUserLicenseAgreement
    links: DocumentLinks
    included: Optional[list[Union[App, Territory]]]

class GameCenterEnabledVersionsResponse(ApplaudResponse):
    data: list[GameCenterEnabledVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[GameCenterEnabledVersion, App]]]
    meta: Optional[PagingInformation]

@deprecated
class IdfaDeclarationResponse(ApplaudResponse):
    data: IdfaDeclaration
    links: DocumentLinks
    included: Optional[list[AppStoreVersion]]

class InAppPurchasesResponse(ApplaudResponse):
    data: list[InAppPurchase]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class InAppPurchaseResponse(ApplaudResponse):
    data: InAppPurchase
    links: DocumentLinks
    included: Optional[list[App]]

class PerfPowerMetricsResponse(ApplaudResponse):
    data: list[PerfPowerMetric]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class PreReleaseVersionsResponse(ApplaudResponse):
    data: list[PrereleaseVersion]
    links: PagedDocumentLinks
    included: Optional[list[Union[Build, App]]]
    meta: Optional[PagingInformation]

class PrereleaseVersionResponse(ApplaudResponse):
    data: PrereleaseVersion
    links: DocumentLinks
    included: Optional[list[Union[Build, App]]]

class ProfilesResponse(ApplaudResponse):
    data: list[Profile]
    links: PagedDocumentLinks
    included: Optional[list[Union[BundleId, Device, Certificate]]]
    meta: Optional[PagingInformation]

class ProfileResponse(ApplaudResponse):
    data: Profile
    links: DocumentLinks
    included: Optional[list[Union[BundleId, Device, Certificate]]]

class RoutingAppCoverageResponse(ApplaudResponse):
    data: RoutingAppCoverage
    links: DocumentLinks
    included: Optional[list[AppStoreVersion]]

class ScmGitReferencesResponse(ApplaudResponse):
    data: list[ScmGitReference]
    links: PagedDocumentLinks
    included: Optional[list[ScmRepository]]
    meta: Optional[PagingInformation]

class ScmGitReferenceResponse(ApplaudResponse):
    data: ScmGitReference
    links: DocumentLinks
    included: Optional[list[ScmRepository]]

class ScmProvidersResponse(ApplaudResponse):
    data: list[ScmProvider]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class ScmProviderResponse(ApplaudResponse):
    data: ScmProvider
    links: DocumentLinks

class ScmPullRequestsResponse(ApplaudResponse):
    data: list[ScmPullRequest]
    links: PagedDocumentLinks
    included: Optional[list[ScmRepository]]
    meta: Optional[PagingInformation]

class ScmPullRequestResponse(ApplaudResponse):
    data: ScmPullRequest
    links: DocumentLinks
    included: Optional[list[ScmRepository]]

class ScmRepositoriesResponse(ApplaudResponse):
    data: list[ScmRepository]
    links: PagedDocumentLinks
    included: Optional[list[Union[ScmProvider, ScmGitReference]]]
    meta: Optional[PagingInformation]

class ScmRepositoryResponse(ApplaudResponse):
    data: ScmRepository
    links: DocumentLinks
    included: Optional[list[Union[ScmProvider, ScmGitReference]]]

class TerritoriesResponse(ApplaudResponse):
    data: list[Territory]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class TerritoryResponse(ApplaudResponse):
    data: Territory
    links: DocumentLinks

class UserInvitationsResponse(ApplaudResponse):
    data: list[UserInvitation]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class UserInvitationResponse(ApplaudResponse):
    data: UserInvitation
    links: DocumentLinks
    included: Optional[list[App]]

class UsersResponse(ApplaudResponse):
    data: list[User]
    links: PagedDocumentLinks
    included: Optional[list[App]]
    meta: Optional[PagingInformation]

class UserResponse(ApplaudResponse):
    data: User
    links: DocumentLinks
    included: Optional[list[App]]

class AppClipDefaultExperienceReleaseWithAppStoreVersionLinkageResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appStoreVersions"] = "appStoreVersions"

    data: Data
    links: DocumentLinks

class AppPreviewSetAppPreviewsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appPreviews"] = "appPreviews"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class AppScreenshotSetAppScreenshotsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appScreenshots"] = "appScreenshots"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class AppStoreVersionAppClipDefaultExperienceLinkageResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appClipDefaultExperiences"] = "appClipDefaultExperiences"

    data: Data
    links: DocumentLinks

class AppStoreVersionBuildLinkageResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: Data
    links: DocumentLinks

class BetaGroupBetaTestersLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaTesters"] = "betaTesters"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BetaGroupBuildsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BetaTesterAppsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BetaTesterBetaGroupsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaGroups"] = "betaGroups"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BetaTesterBuildsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["builds"] = "builds"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class BuildAppEncryptionDeclarationLinkageResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["appEncryptionDeclarations"] = "appEncryptionDeclarations"

    data: Data
    links: DocumentLinks

class BuildIndividualTestersLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["betaTesters"] = "betaTesters"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class GameCenterEnabledVersionCompatibleVersionsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["gameCenterEnabledVersions"] = "gameCenterEnabledVersions"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class UserVisibleAppsLinkagesResponse(ApplaudResponse):
    class Data(ApplaudModel):
        id: str
        type: Literal["apps"] = "apps"

    data: list[Data]
    links: PagedDocumentLinks
    meta: Optional[PagingInformation]

class ErrorResponse(ApplaudResponse):
    class Error(ApplaudModel):
        code: str
        detail: str
        title: str
        status: str
        id: Optional[str]
        source: Optional[Union[ErrorSourcePointer, ErrorSourceParameter]]

    errors: Optional[list[Error]]


